"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getNamespaces = void 0;
var unique_array_1 = require("./unique-array");
var getNamespaces = function (options, namespacesNeeded) {
    var inputNamespace = options.defaultNS || 'translation';
    var defaultNS = Array.isArray(inputNamespace)
        ? inputNamespace
        : [inputNamespace];
    if (Array.isArray(namespacesNeeded) && namespacesNeeded.length === 0)
        return [];
    if (Array.isArray(namespacesNeeded))
        return (0, unique_array_1.uniqueArray)(__spreadArray(__spreadArray([], __read(namespacesNeeded), false), __read(defaultNS), false));
    if (typeof namespacesNeeded === 'string')
        return (0, unique_array_1.uniqueArray)(__spreadArray([namespacesNeeded], __read(defaultNS), false));
    return defaultNS;
};
exports.getNamespaces = getNamespaces;
